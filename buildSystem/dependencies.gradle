ext {

    //Version
    supportVersion = '28.0.0'

    retrofitVersion = '2.5.0'
    rxAndroidVersion = '2.1.0'
    rxJavaVersion  = '2.2.3'

    glideVersion = '4.9.0'
    circleImageVersion = '3.0.0'

    junitVersion = '4.12'
    mockitoVersion = '2.8.47'

    //Packages
    supportPackage = 'com.android.support'
    retrofitPackage = 'com.squareup.retrofit2'
    constraintLayoutPackage ='com.android.support.constraint'
    daggerPackage = 'com.google.dagger'
    reactivePackage = 'io.reactivex.rxjava2'

    glidePackage = 'com.github.bumptech.glide'
    hdodenhofPackage = 'de.hdodenhof'

    junitPackage = 'junit'
    mockitoPackage = 'org.mockito'
    constraintLayout = '1.1.3'

    multidexVersion = '1.0.2'
    dagger2Version = '2.14.1'




    dependencyInjection =[
            dagger : buildDependency(daggerPackage,'dagger',daggerPackage),
            daggerSupport : buildDependency(daggerPackage,'dagger-android-support',dagger2Version)
    ]
    supportDependencies = [
            design           : buildDependency(supportPackage, 'design', supportVersion),
            recyclerView     : buildDependency(supportPackage, 'recyclerview-v7', supportVersion),
            cardView         : buildDependency(supportPackage, 'cardview-v7', supportVersion),
            appCompat        : buildDependency(supportPackage, 'appcompat-v7', supportVersion),
            constrainstLayout : buildDependency(constraintLayoutPackage
                    , 'constraint-layout', constraintLayout)
    ]

    retrofitDependencies = [
            retrofit     : buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
            gson         : buildDependency(retrofitPackage, 'converter-gson', retrofitVersion),
            rxAdapterJava: buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitVersion)
    ]

    rxDependencies = [
            rxAndroid: buildDependency(reactivePackage, 'rxandroid', rxAndroidVersion),
            rxJava   : buildDependency(reactivePackage,'rxjava',rxJavaVersion)
    ]
 /*   annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"*/
    glide = buildDependency(glidePackage, 'glide', glideVersion)
    glideCompiler = buildDependency(glidePackage, 'compiler', glideVersion)
    circleImageView = buildDependency(hdodenhofPackage, 'circleimageview', circleImageVersion)
    daggerProcessor = buildDependency(daggerPackage,'dagger-android-support',dagger2Version )
    daggerCompiler =  buildDependency(daggerPackage, 'dagger-compiler', dagger2Version)

    testingDependencies = [
            junit      : buildDependency(junitPackage, 'junit', junitVersion),
            mockito    : buildDependency(mockitoPackage, 'mockito-core', mockitoVersion)
    ]

    multidex = buildDependency(supportPackage, 'multidex', multidexVersion)
}


static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}
